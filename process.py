log_file = open("um-server-01.txt")
#this is completing two tasks first python will open/ link the python coding face to an additional source called "um-server-01.txt". 
#After it has gone through the process of linking this file to the i]python code it names the file log_file declaring it as a variable that can be used and referenced in the future.

def sales_reports(log_file): #here we are creating a new function and defining it as sales_reports. This functions param is the log_file so we know what ever it does it processes through the log_file data as it completes it's programmed tasks as written in the following lines of the function.
    for line in log_file: #here we see the phrase for which tells us our function is going to be a for loop. It teels us where specifically we are working with the log_file by sayin for each line (ie each data row) and then tells us what to do with this specific grouping of data throughout the file in the following lines
        line = line.rstrip() # here we are now stating that our lines are equivalent to this process where they will undergo a predefined functionn in python called rstrip(). What this function does is removes extra characters from our data sets at the end of the string on the right side which is what the r stands for. this function is being completed so we can have a more clean and dry data set to work with.
        day = line[0:3]   # next we are diving into more of our function process and creating our functions main value. first we define a new variable called day which will represent a few indexes in an array at each line. These indexes specified as [0,3] meean that we begin at the zero index but not including the first index and ending at the third index inclusive. So we are defining day as the values as the indicee values of 1,2, and 3.
        if day == "Tue": # here we are creating our conditional statement for our function. PReviously we defined where it is going to be calling data from and here we are telling it, once you have accessed this data evaluate to see if it is equal to true.
            print(line) # now that we have performed the steps of finding what data we are evaluating and what conditions we are checking for we are providing a command for python. A response for it to do once it has recognized and evaluated the previous steps. Here we are telling it to print the entire line of data if the indicee values of 1,2 and 3 are evaluated to be true.
                        # here we can see that the function has been closed leaving us with unanswered questions. Because we have only coded our function to respond and perform a task if the indicee values are evaluated to true we have not told it what to do if the values are false which is the only other 
                        #option python can evaluate the data to when performing this tasks we term as a boolean. typically we will also see an else or elsif statement to tell us what to do with other responses. Howvere nothing is stated here so because python was given instructions what to do with true evalutation it has no instrucitons for what to do if the data is evaluated as false and will therefore perform no additional tasks once it has evaluated data as false.

sales_reports(log_file) #here after we have defined our function we are actually performing it. Python is running our if function on our log_file
